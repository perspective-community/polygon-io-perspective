{"version":3,"file":"editor.worker.js","mappings":"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AN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC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","sources":["webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/event.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/hash.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/iterator.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/path.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/process.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/types.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/uint.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/editor/common/core/token.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","webpack://polygon-io-perspective/webpack/bootstrap","webpack://polygon-io-perspective/webpack/runtime/define property getters","webpack://polygon-io-perspective/webpack/runtime/global","webpack://polygon-io-perspective/webpack/runtime/hasOwnProperty shorthand","webpack://polygon-io-perspective/webpack/runtime/make namespace object","webpack://polygon-io-perspective/./node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nexport class CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        if (cancel) {\n            this.cancel();\n        }\n        if (this._parentListener) {\n            this._parentListener.dispose();\n        }\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nexport class StringDiffSequence {\n    constructor(source) {\n        this.source = source;\n    }\n    getElements() {\n        const source = this.source;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            characters[i] = source.charCodeAt(i);\n        }\n        return characters;\n    }\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nexport class Debug {\n    static Assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n}\nexport class MyArray {\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    static Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n    static Copy2(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n}\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    constructor() {\n        this.m_changes = [];\n        this.m_originalStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    MarkNextChange() {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n    }\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    AddOriginalElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    }\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    AddModifiedElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    }\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    getChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    }\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    getReverseChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    }\n}\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n    /**\n     * Constructs the DiffFinder\n     */\n    constructor(originalSequence, modifiedSequence, continueProcessingPredicate = null) {\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        const [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n        const [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n        this._hasStrings = (originalHasStrings && modifiedHasStrings);\n        this._originalStringElements = originalStringElements;\n        this._originalElementsOrHash = originalElementsOrHash;\n        this._modifiedStringElements = modifiedStringElements;\n        this._modifiedElementsOrHash = modifiedElementsOrHash;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    static _isStringArray(arr) {\n        return (arr.length > 0 && typeof arr[0] === 'string');\n    }\n    static _getElements(sequence) {\n        const elements = sequence.getElements();\n        if (LcsDiff._isStringArray(elements)) {\n            const hashes = new Int32Array(elements.length);\n            for (let i = 0, len = elements.length; i < len; i++) {\n                hashes[i] = stringHash(elements[i], 0);\n            }\n            return [elements, hashes, true];\n        }\n        if (elements instanceof Int32Array) {\n            return [[], elements, false];\n        }\n        return [[], new Int32Array(elements), false];\n    }\n    ElementsAreEqual(originalIndex, newIndex) {\n        if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n    }\n    OriginalElementsAreEqual(index1, index2) {\n        if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n    }\n    ModifiedElementsAreEqual(index1, index2) {\n        if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n    }\n    ComputeDiff(pretty) {\n        return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n    }\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    _ComputeDiff(originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        const quitEarlyArr = [false];\n        let changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            changes = this.PrettifyChanges(changes);\n        }\n        return {\n            quitEarly: quitEarlyArr[0],\n            changes: changes\n        };\n    }\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            let changes;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        const midOriginalArr = [0];\n        const midModifiedArr = [0];\n        const result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        const midOriginal = midOriginalArr[0];\n        const midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            const leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            let rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We did't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    }\n    WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        let forwardChanges = null;\n        let reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        let changeHelper = new DiffChangeHelper();\n        let diagonalMin = diagonalForwardStart;\n        let diagonalMax = diagonalForwardEnd;\n        let diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        let lastOriginalIndex = -1073741824 /* MIN_SAFE_SMALL_INTEGER */;\n        let historyIndex = this.m_forwardHistory.length - 1;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            const diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            let originalStartPoint = midOriginalArr[0] + 1;\n            let modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                const lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                const diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    }\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        let originalIndex = 0, modifiedIndex = 0;\n        let diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        let diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        const maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        const numDiagonals = maxDifferences + 1;\n        const forwardPoints = new Int32Array(numDiagonals);\n        const reversePoints = new Int32Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        const diagonalForwardBase = (modifiedEnd - modifiedStart);\n        const diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        const diagonalForwardOffset = (originalStart - modifiedStart);\n        const diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        const delta = diagonalReverseBase - diagonalForwardBase;\n        const deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        for (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            let furthestOriginalIndex = 0;\n            let furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            const matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= 1447 /* MaxDifferencesHistory */) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                let temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    }\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    PrettifyChanges(changes) {\n        // Shift all the changes down first\n        for (let i = 0; i < changes.length; i++) {\n            const change = changes[i];\n            const originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n            const modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop &&\n                change.modifiedStart + change.modifiedLength < modifiedStop &&\n                (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n                (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            let mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (let i = changes.length - 1; i >= 0; i--) {\n            const change = changes[i];\n            let originalStop = 0;\n            let modifiedStop = 0;\n            if (i > 0) {\n                const prevChange = changes[i - 1];\n                originalStop = prevChange.originalStart + prevChange.originalLength;\n                modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n            }\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            let bestDelta = 0;\n            let bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (let delta = 1;; delta++) {\n                const originalStart = change.originalStart - delta;\n                const modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                const touchingPreviousChange = (originalStart === originalStop && modifiedStart === modifiedStop);\n                const score = ((touchingPreviousChange ? 5 : 0)\n                    + this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength));\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n            const mergedChangeArr = [null];\n            if (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n                changes[i - 1] = mergedChangeArr[0];\n                changes.splice(i, 1);\n                i++;\n                continue;\n            }\n        }\n        // There could be multiple longest common substrings.\n        // Give preference to the ones containing longer lines\n        if (this._hasStrings) {\n            for (let i = 1, len = changes.length; i < len; i++) {\n                const aChange = changes[i - 1];\n                const bChange = changes[i];\n                const matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n                const aOriginalStart = aChange.originalStart;\n                const bOriginalEnd = bChange.originalStart + bChange.originalLength;\n                const abOriginalLength = bOriginalEnd - aOriginalStart;\n                const aModifiedStart = aChange.modifiedStart;\n                const bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n                const abModifiedLength = bModifiedEnd - aModifiedStart;\n                // Avoid wasting a lot of time with these searches\n                if (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n                    const t = this._findBetterContiguousSequence(aOriginalStart, abOriginalLength, aModifiedStart, abModifiedLength, matchedLength);\n                    if (t) {\n                        const [originalMatchStart, modifiedMatchStart] = t;\n                        if (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n                            // switch to another sequence that has a better score\n                            aChange.originalLength = originalMatchStart - aChange.originalStart;\n                            aChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n                            bChange.originalStart = originalMatchStart + matchedLength;\n                            bChange.modifiedStart = modifiedMatchStart + matchedLength;\n                            bChange.originalLength = bOriginalEnd - bChange.originalStart;\n                            bChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n                        }\n                    }\n                }\n            }\n        }\n        return changes;\n    }\n    _findBetterContiguousSequence(originalStart, originalLength, modifiedStart, modifiedLength, desiredLength) {\n        if (originalLength < desiredLength || modifiedLength < desiredLength) {\n            return null;\n        }\n        const originalMax = originalStart + originalLength - desiredLength + 1;\n        const modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n        let bestScore = 0;\n        let bestOriginalStart = 0;\n        let bestModifiedStart = 0;\n        for (let i = originalStart; i < originalMax; i++) {\n            for (let j = modifiedStart; j < modifiedMax; j++) {\n                const score = this._contiguousSequenceScore(i, j, desiredLength);\n                if (score > 0 && score > bestScore) {\n                    bestScore = score;\n                    bestOriginalStart = i;\n                    bestModifiedStart = j;\n                }\n            }\n        }\n        if (bestScore > 0) {\n            return [bestOriginalStart, bestModifiedStart];\n        }\n        return null;\n    }\n    _contiguousSequenceScore(originalStart, modifiedStart, length) {\n        let score = 0;\n        for (let l = 0; l < length; l++) {\n            if (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n                return 0;\n            }\n            score += this._originalStringElements[originalStart + l].length;\n        }\n        return score;\n    }\n    _OriginalIsBoundary(index) {\n        if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n    }\n    _OriginalRegionIsBoundary(originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            const originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _ModifiedIsBoundary(index) {\n        if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n    }\n    _ModifiedRegionIsBoundary(modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            const modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _boundaryScore(originalStart, originalLength, modifiedStart, modifiedLength) {\n        const originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        const modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    }\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    ConcatenateChanges(left, right) {\n        let mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            const result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            const result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    }\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    ChangesOverlap(left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            const originalStart = left.originalStart;\n            let originalLength = left.originalLength;\n            const modifiedStart = left.modifiedStart;\n            let modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    }\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    ClipDiagonalBound(diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        const diagonalsBelow = diagonalBaseIndex;\n        const diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        const diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            const lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            const upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    getOriginalEnd() {\n        return this.originalStart + this.originalLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    getModifiedEnd() {\n        return this.modifiedStart + this.modifiedLength;\n    }\n}\n","// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    // For external errors, we don't want the listeners to be called\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nexport const errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        let { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack\n        };\n    }\n    // return as is\n    return error;\n}\nconst canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled() {\n    const error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(`Illegal argument: ${name}`);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(`Illegal state: ${name}`);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError } from './errors.js';\nimport { Disposable, combinedDisposable, DisposableStore } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\nexport var Event;\n(function (Event) {\n    Event.None = () => Disposable.None;\n    /**\n     * Given an event, returns another event which only fires once.\n     */\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            // we need this, in case the event fires during the listener call\n            let didFire = false;\n            let result;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * Given an event and a `map` function, returns another event which maps each element\n     * through the mapping function.\n     */\n    function map(event, map) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n    }\n    Event.map = map;\n    /**\n     * Given an event and an `each` function, returns another identical event and calls\n     * the `each` function per each element.\n     */\n    function forEach(event, each) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n    }\n    Event.forEach = forEach;\n    function filter(event, filter) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n    }\n    Event.any = any;\n    /**\n     * Given an event and a `merge` function, returns another event which maps each element\n     * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n     */\n    function reduce(event, merge, initial) {\n        let output = initial;\n        return map(event, e => {\n            output = merge(output, e);\n            return output;\n        });\n    }\n    Event.reduce = reduce;\n    /**\n     * Given a chain of event processing functions (filter, map, etc), each\n     * function will be invoked per event & per listener. Snapshotting an event\n     * chain allows each function to be invoked just once per event.\n     */\n    function snapshot(event) {\n        let listener;\n        const emitter = new Emitter({\n            onFirstListenerAdd() {\n                listener = event(emitter.fire, emitter);\n            },\n            onLastListenerRemove() {\n                listener.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.snapshot = snapshot;\n    function debounce(event, merge, delay = 100, leading = false, leakWarningThreshold) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        const emitter = new Emitter({\n            leakWarningThreshold,\n            onFirstListenerAdd() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    clearTimeout(handle);\n                    handle = setTimeout(() => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    }, delay);\n                });\n            },\n            onLastListenerRemove() {\n                subscription.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * Given an event, it returns another event which fires only once and as soon as\n     * the input event emits. The event data is the number of millis it took for the\n     * event to fire.\n     */\n    function stopwatch(event) {\n        const start = new Date().getTime();\n        return map(once(event), _ => new Date().getTime() - start);\n    }\n    Event.stopwatch = stopwatch;\n    /**\n     * Given an event, it returns another event which fires only when the event\n     * element changes.\n     */\n    function latch(event) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || value !== cache;\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        });\n    }\n    Event.latch = latch;\n    /**\n     * Buffers the provided event until a first listener comes\n     * along, at which point fire all the events at once and\n     * pipe the event from then on.\n     *\n     * ```typescript\n     * const emitter = new Emitter<number>();\n     * const event = emitter.event;\n     * const bufferedEvent = buffer(event);\n     *\n     * emitter.fire(1);\n     * emitter.fire(2);\n     * emitter.fire(3);\n     * // nothing...\n     *\n     * const listener = bufferedEvent(num => console.log(num));\n     * // 1, 2, 3\n     *\n     * emitter.fire(4);\n     * // 4\n     * ```\n     */\n    function buffer(event, nextTick = false, _buffer = []) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        const flush = () => {\n            if (buffer) {\n                buffer.forEach(e => emitter.fire(e));\n            }\n            buffer = null;\n        };\n        const emitter = new Emitter({\n            onFirstListenerAdd() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                }\n            },\n            onFirstListenerDidAdd() {\n                if (buffer) {\n                    if (nextTick) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onLastListenerRemove() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    class ChainableEvent {\n        constructor(event) {\n            this.event = event;\n        }\n        map(fn) {\n            return new ChainableEvent(map(this.event, fn));\n        }\n        forEach(fn) {\n            return new ChainableEvent(forEach(this.event, fn));\n        }\n        filter(fn) {\n            return new ChainableEvent(filter(this.event, fn));\n        }\n        reduce(merge, initial) {\n            return new ChainableEvent(reduce(this.event, merge, initial));\n        }\n        latch() {\n            return new ChainableEvent(latch(this.event));\n        }\n        debounce(merge, delay = 100, leading = false, leakWarningThreshold) {\n            return new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n        }\n        on(listener, thisArgs, disposables) {\n            return this.event(listener, thisArgs, disposables);\n        }\n        once(listener, thisArgs, disposables) {\n            return once(this.event)(listener, thisArgs, disposables);\n        }\n    }\n    function chain(event) {\n        return new ChainableEvent(event);\n    }\n    Event.chain = chain;\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = new Emitter({ onFirstListenerAdd, onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = new Emitter({ onFirstListenerAdd, onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    function fromPromise(promise) {\n        const emitter = new Emitter();\n        let shouldEmit = false;\n        promise\n            .then(undefined, () => null)\n            .then(() => {\n            if (!shouldEmit) {\n                setTimeout(() => emitter.fire(undefined), 0);\n            }\n            else {\n                emitter.fire(undefined);\n            }\n        });\n        shouldEmit = true;\n        return emitter.event;\n    }\n    Event.fromPromise = fromPromise;\n    function toPromise(event) {\n        return new Promise(resolve => once(event)(resolve));\n    }\n    Event.toPromise = toPromise;\n})(Event || (Event = {}));\nclass EventProfiling {\n    constructor(name) {\n        this._listenerCount = 0;\n        this._invocationCount = 0;\n        this._elapsedOverall = 0;\n        this._name = `${name}_${EventProfiling._idPool++}`;\n    }\n    start(listenerCount) {\n        this._stopWatch = new StopWatch(true);\n        this._listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this._elapsedOverall += elapsed;\n            this._invocationCount += 1;\n            console.info(`did FIRE ${this._name}: elapsed_ms: ${elapsed.toFixed(5)}, listener: ${this._listenerCount} (elapsed_overall: ${this._elapsedOverall.toFixed(2)}, invocations: ${this._invocationCount})`);\n            this._stopWatch = undefined;\n        }\n    }\n}\nEventProfiling._idPool = 0;\nlet _globalLeakWarningThreshold = -1;\nclass LeakageMonitor {\n    constructor(customThreshold, name = Math.random().toString(18).slice(2, 5)) {\n        this.customThreshold = customThreshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        if (this._stacks) {\n            this._stacks.clear();\n        }\n    }\n    check(listenerCount) {\n        let threshold = _globalLeakWarningThreshold;\n        if (typeof this.customThreshold === 'number') {\n            threshold = this.customThreshold;\n        }\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        const stack = new Error().stack.split('\\n').slice(3).join('\\n');\n        const count = (this._stacks.get(stack) || 0);\n        this._stacks.set(stack, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            let topStack;\n            let topCount = 0;\n            for (const [stack, count] of this._stacks) {\n                if (!topStack || topCount < count) {\n                    topStack = stack;\n                    topCount = count;\n                }\n            }\n            console.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n            console.warn(topStack);\n        }\n        return () => {\n            const count = (this._stacks.get(stack) || 0);\n            this._stacks.set(stack, count - 1);\n        };\n    }\n}\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nexport class Emitter {\n    constructor(options) {\n        var _a;\n        this._disposed = false;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n        this._perfMon = ((_a = this._options) === null || _a === void 0 ? void 0 : _a._profName) ? new EventProfiling(this._options._profName) : undefined;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                var _a;\n                if (!this._listeners) {\n                    this._listeners = new LinkedList();\n                }\n                const firstListener = this._listeners.isEmpty();\n                if (firstListener && this._options && this._options.onFirstListenerAdd) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                const remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                if (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n                    this._options.onFirstListenerDidAdd(this);\n                }\n                if (this._options && this._options.onListenerDidAdd) {\n                    this._options.onListenerDidAdd(this, listener, thisArgs);\n                }\n                // check and record this emitter for potential leakage\n                const removeMonitor = (_a = this._leakageMon) === null || _a === void 0 ? void 0 : _a.check(this._listeners.size);\n                let result;\n                result = {\n                    dispose: () => {\n                        if (removeMonitor) {\n                            removeMonitor();\n                        }\n                        result.dispose = Emitter._noop;\n                        if (!this._disposed) {\n                            remove();\n                            if (this._options && this._options.onLastListenerRemove) {\n                                const hasListeners = (this._listeners && !this._listeners.isEmpty());\n                                if (!hasListeners) {\n                                    this._options.onLastListenerRemove(this);\n                                }\n                            }\n                        }\n                    }\n                };\n                if (disposables instanceof DisposableStore) {\n                    disposables.add(result);\n                }\n                else if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        var _a, _b;\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = new LinkedList();\n            }\n            for (let listener of this._listeners) {\n                this._deliveryQueue.push([listener, event]);\n            }\n            // start/stop performance insight collection\n            (_a = this._perfMon) === null || _a === void 0 ? void 0 : _a.start(this._deliveryQueue.size);\n            while (this._deliveryQueue.size > 0) {\n                const [listener, event] = this._deliveryQueue.shift();\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event);\n                    }\n                    else {\n                        listener[0].call(listener[1], event);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n            (_b = this._perfMon) === null || _b === void 0 ? void 0 : _b.stop();\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        (_a = this._listeners) === null || _a === void 0 ? void 0 : _a.clear();\n        (_b = this._deliveryQueue) === null || _b === void 0 ? void 0 : _b.clear();\n        (_c = this._leakageMon) === null || _c === void 0 ? void 0 : _c.dispose();\n        this._disposed = true;\n    }\n}\nEmitter._noop = function () { };\nexport class PauseableEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = new LinkedList();\n        this._mergeFn = options === null || options === void 0 ? void 0 : options.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                // use the merge function to create a single composite\n                // event. make a copy in case firing pauses this emitter\n                const events = Array.from(this._eventQueue);\n                this._eventQueue.clear();\n                super.fire(this._mergeFn(events));\n            }\n            else {\n                // no merging, fire each event individually and test\n                // that this emitter isn't paused halfway through\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._listeners) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n    constructor() {\n        this.buffers = [];\n    }\n    wrapEvent(event) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const buffer = this.buffers[this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(() => listener.call(thisArgs, i));\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const buffer = [];\n        this.buffers.push(buffer);\n        const r = fn();\n        this.buffers.pop();\n        buffer.forEach(flush => flush());\n        return r;\n    }\n}\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onFirstListenerDidAdd: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onLastListenerRemove: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n    return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nfunction numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    // delta + bits = totalBits\n    const delta = totalBits - bits;\n    // All ones, expect `delta` zeros aligned to the right\n    const mask = ~((1 << delta) - 1);\n    // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nexport function toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n    return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = new Uint8Array(64 /* BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n        this._buffDV = new DataView(this._buff.buffer);\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (strings.isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (strings.isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = strings.computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        // illegal => unicode replacement character\n                        codePoint = 65533 /* UNICODE_REPLACEMENT */;\n                    }\n                }\n                else {\n                    // last character is a surrogate pair\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (strings.isLowSurrogate(charCode)) {\n                // illegal => unicode replacement character\n                codePoint = 65533 /* UNICODE_REPLACEMENT */;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 /* BLOCK_SIZE */) {\n            this._step();\n            buffLen -= 64 /* BLOCK_SIZE */;\n            this._totalLen += 64 /* BLOCK_SIZE */;\n            // take last 3 in case of UTF8 overflow\n            buff[0] = buff[64 /* BLOCK_SIZE */ + 0];\n            buff[1] = buff[64 /* BLOCK_SIZE */ + 1];\n            buff[2] = buff[64 /* BLOCK_SIZE */ + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                // illegal => unicode replacement character\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 /* UNICODE_REPLACEMENT */);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        // this will fit because the mantissa can cover up to 52 bits\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\nStringSHA1._bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n(function (Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = Object.freeze([]);\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        for (const element of iterable) {\n            yield fn(element);\n        }\n    }\n    Iterable.map = map;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concat = concat;\n    function* concatNested(iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concatNested = concatNested;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    /**\n     * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n     */\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    /**\n     * Consumes `atMost` elements from iterable and returns the consumed elements,\n     * and an iterable for the rest of the elements.\n     */\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n    /**\n     * Returns whether the iterables are the same length and all items are\n     * equal using the comparator function.\n     */\n    function equals(a, b, comparator = (at, bt) => at === bt) {\n        const ai = a[Symbol.iterator]();\n        const bi = b[Symbol.iterator]();\n        while (true) {\n            const an = ai.next();\n            const bn = bi.next();\n            if (an.done !== bn.done) {\n                return false;\n            }\n            else if (an.done) {\n                return true;\n            }\n            else if (!comparator(an.value, bn.value)) {\n                return false;\n            }\n        }\n    }\n    Iterable.equals = equals;\n})(Iterable || (Iterable = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nclass KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    }\n}\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n    function define(keyCode, uiLabel, usUserSettingsLabel = uiLabel, generalUserSettingsLabel = usUserSettingsLabel) {\n        uiMap.define(keyCode, uiLabel);\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n    }\n    define(0 /* Unknown */, 'unknown');\n    define(1 /* Backspace */, 'Backspace');\n    define(2 /* Tab */, 'Tab');\n    define(3 /* Enter */, 'Enter');\n    define(4 /* Shift */, 'Shift');\n    define(5 /* Ctrl */, 'Ctrl');\n    define(6 /* Alt */, 'Alt');\n    define(7 /* PauseBreak */, 'PauseBreak');\n    define(8 /* CapsLock */, 'CapsLock');\n    define(9 /* Escape */, 'Escape');\n    define(10 /* Space */, 'Space');\n    define(11 /* PageUp */, 'PageUp');\n    define(12 /* PageDown */, 'PageDown');\n    define(13 /* End */, 'End');\n    define(14 /* Home */, 'Home');\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\n    define(19 /* Insert */, 'Insert');\n    define(20 /* Delete */, 'Delete');\n    define(21 /* KEY_0 */, '0');\n    define(22 /* KEY_1 */, '1');\n    define(23 /* KEY_2 */, '2');\n    define(24 /* KEY_3 */, '3');\n    define(25 /* KEY_4 */, '4');\n    define(26 /* KEY_5 */, '5');\n    define(27 /* KEY_6 */, '6');\n    define(28 /* KEY_7 */, '7');\n    define(29 /* KEY_8 */, '8');\n    define(30 /* KEY_9 */, '9');\n    define(31 /* KEY_A */, 'A');\n    define(32 /* KEY_B */, 'B');\n    define(33 /* KEY_C */, 'C');\n    define(34 /* KEY_D */, 'D');\n    define(35 /* KEY_E */, 'E');\n    define(36 /* KEY_F */, 'F');\n    define(37 /* KEY_G */, 'G');\n    define(38 /* KEY_H */, 'H');\n    define(39 /* KEY_I */, 'I');\n    define(40 /* KEY_J */, 'J');\n    define(41 /* KEY_K */, 'K');\n    define(42 /* KEY_L */, 'L');\n    define(43 /* KEY_M */, 'M');\n    define(44 /* KEY_N */, 'N');\n    define(45 /* KEY_O */, 'O');\n    define(46 /* KEY_P */, 'P');\n    define(47 /* KEY_Q */, 'Q');\n    define(48 /* KEY_R */, 'R');\n    define(49 /* KEY_S */, 'S');\n    define(50 /* KEY_T */, 'T');\n    define(51 /* KEY_U */, 'U');\n    define(52 /* KEY_V */, 'V');\n    define(53 /* KEY_W */, 'W');\n    define(54 /* KEY_X */, 'X');\n    define(55 /* KEY_Y */, 'Y');\n    define(56 /* KEY_Z */, 'Z');\n    define(57 /* Meta */, 'Meta');\n    define(58 /* ContextMenu */, 'ContextMenu');\n    define(59 /* F1 */, 'F1');\n    define(60 /* F2 */, 'F2');\n    define(61 /* F3 */, 'F3');\n    define(62 /* F4 */, 'F4');\n    define(63 /* F5 */, 'F5');\n    define(64 /* F6 */, 'F6');\n    define(65 /* F7 */, 'F7');\n    define(66 /* F8 */, 'F8');\n    define(67 /* F9 */, 'F9');\n    define(68 /* F10 */, 'F10');\n    define(69 /* F11 */, 'F11');\n    define(70 /* F12 */, 'F12');\n    define(71 /* F13 */, 'F13');\n    define(72 /* F14 */, 'F14');\n    define(73 /* F15 */, 'F15');\n    define(74 /* F16 */, 'F16');\n    define(75 /* F17 */, 'F17');\n    define(76 /* F18 */, 'F18');\n    define(77 /* F19 */, 'F19');\n    define(78 /* NumLock */, 'NumLock');\n    define(79 /* ScrollLock */, 'ScrollLock');\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n    define(91 /* OEM_8 */, 'OEM_8');\n    define(92 /* OEM_102 */, 'OEM_102');\n    define(93 /* NUMPAD_0 */, 'NumPad0');\n    define(94 /* NUMPAD_1 */, 'NumPad1');\n    define(95 /* NUMPAD_2 */, 'NumPad2');\n    define(96 /* NUMPAD_3 */, 'NumPad3');\n    define(97 /* NUMPAD_4 */, 'NumPad4');\n    define(98 /* NUMPAD_5 */, 'NumPad5');\n    define(99 /* NUMPAD_6 */, 'NumPad6');\n    define(100 /* NUMPAD_7 */, 'NumPad7');\n    define(101 /* NUMPAD_8 */, 'NumPad8');\n    define(102 /* NUMPAD_9 */, 'NumPad9');\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nexport function createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    const firstPart = (keybinding & 0x0000FFFF) >>> 0;\n    const chordPart = (keybinding & 0xFFFF0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding([\n            createSimpleKeybinding(firstPart, OS),\n            createSimpleKeybinding(chordPart, OS)\n        ]);\n    }\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    const ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    const winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    const ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    const shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    const altKey = (keybinding & 512 /* Alt */ ? true : false);\n    const metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    const keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nexport class SimpleKeybinding {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    equals(other) {\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    }\n    isModifierKey() {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    }\n    toChord() {\n        return new ChordKeybinding([this]);\n    }\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    isDuplicateModifierCase() {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    }\n}\nexport class ChordKeybinding {\n    constructor(parts) {\n        if (parts.length === 0) {\n            throw illegalArgument(`parts`);\n        }\n        this.parts = parts;\n    }\n}\nexport class ResolvedKeybindingPart {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n}\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nexport class ResolvedKeybinding {\n}\n","import { Iterable } from './iterator.js';\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nif (TRACK_DISPOSABLES) {\n    const __is_disposable_tracked__ = '__is_disposable_tracked__';\n    disposableTracker = new class {\n        trackDisposable(x) {\n            const stack = new Error('Potentially leaked disposable').stack;\n            setTimeout(() => {\n                if (!x[__is_disposable_tracked__]) {\n                    console.log(stack);\n                }\n            }, 3000);\n        }\n        markTracked(x) {\n            if (x && x !== Disposable.None) {\n                try {\n                    x[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n    };\n}\nfunction markTracked(x) {\n    if (!disposableTracker) {\n        return;\n    }\n    disposableTracker.markTracked(x);\n}\nexport function trackDisposable(x) {\n    if (!disposableTracker) {\n        return x;\n    }\n    disposableTracker.trackDisposable(x);\n    return x;\n}\nexport class MultiDisposeError extends Error {\n    constructor(errors) {\n        super(`Encountered errors while disposing of store. Errors: [${errors.join(', ')}]`);\n        this.errors = errors;\n    }\n}\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n    if (Iterable.is(arg)) {\n        let errors = [];\n        for (const d of arg) {\n            if (d) {\n                markTracked(d);\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw new MultiDisposeError(errors);\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        markTracked(arg);\n        arg.dispose();\n        return arg;\n    }\n}\nexport function combinedDisposable(...disposables) {\n    disposables.forEach(markTracked);\n    return toDisposable(() => dispose(disposables));\n}\nexport function toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: () => {\n            markTracked(self);\n            fn();\n        }\n    });\n    return self;\n}\nexport class DisposableStore {\n    constructor() {\n        this._toDispose = new Set();\n        this._isDisposed = false;\n    }\n    /**\n     * Dispose of all registered disposables and mark this object as disposed.\n     *\n     * Any future disposables added to this object will be disposed of on `add`.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markTracked(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    /**\n     * Dispose of all registered disposables but do not mark this object as disposed.\n     */\n    clear() {\n        try {\n            dispose(this._toDispose.values());\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    add(t) {\n        if (!t) {\n            return t;\n        }\n        if (t === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        markTracked(t);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n            }\n        }\n        else {\n            this._toDispose.add(t);\n        }\n        return t;\n    }\n}\nDisposableStore.DISABLE_DISPOSED_WARNING = false;\nexport class Disposable {\n    constructor() {\n        this._store = new DisposableStore();\n        trackDisposable(this);\n    }\n    dispose() {\n        markTracked(this);\n        this._store.dispose();\n    }\n    _register(t) {\n        if (t === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        return this._store.add(t);\n    }\n}\nDisposable.None = Object.freeze({ dispose() { } });\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        var _a;\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (value) {\n            markTracked(value);\n        }\n        this._value = value;\n    }\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        var _a;\n        this._isDisposed = true;\n        markTracked(this);\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._value = undefined;\n    }\n}\nexport class ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n        code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n    }\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nexport const win32 = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, 'path');\n                // Skip empty entries\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = process.cwd();\n            }\n            else {\n                // Windows has the concept of drive-specific current working\n                // directories. If we've resolved a drive letter but not yet an\n                // absolute path, get cwd for that drive, or the process cwd if\n                // the drive cwd is not available. We're sure the device is not\n                // a UNC path at this points, because UNC paths are always absolute.\n                path = process.env[`=${resolvedDevice}`] || process.cwd();\n                // Verify that a cwd was found and that it actually points\n                // to our drive. If not, default to the drive's root.\n                if (path === undefined ||\n                    path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            // Try to match a root\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    // `path` contains just a path separator\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator, we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                // We matched a UNC root\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                // Possible device root\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    // Treat separator following drive name as an absolute path\n                    // indicator\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        // This path points to another device so it is not applicable\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        // At this point the path should be resolved to a full absolute path,\n        // but handle relative paths to be safe (might happen when process.cwd()\n        // fails)\n        // Normalize the tail path\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len === 1) {\n            // `path` contains just a single char, exit early to avoid\n            // unnecessary work\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator, we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                // Treat separator following drive name as an absolute path\n                // indicator\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            // Possible device root\n            len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        // Make sure that the joined path doesn't start with two slashes, because\n        // normalize() will mistake it for an UNC path then.\n        //\n        // This step is skipped when it is very clear that the user actually\n        // intended to point at an UNC path. This is assumed when the first\n        // non-empty string arguments starts with exactly two slashes followed by\n        // at least one more non-slash character.\n        //\n        // Note that for normalize() to treat a path as an UNC path it needs to\n        // have at least 2 components, so we don't filter for that here.\n        // This means that the user can use join to construct UNC paths from\n        // a server name and a share name; for example:\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            // Find any more consecutive slashes we need to replace\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            // Replace the slashes if needed\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    // It will solve the relative path from `from` to `to`, for instance:\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        // Trim any leading backslashes\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        // We found a mismatch before the first common path separator was seen, so\n        // return the original `to`.\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to` and\n        // `from`\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        // Note: this will *probably* throw somewhere.\n        if (typeof path !== 'string') {\n            return path;\n        }\n        if (path.length === 0) {\n            return '';\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root, convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            // Matched device root, convert the path to a long UNC path\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            // `path` contains just a path separator, exit early to avoid\n            // unnecessary work or a dot.\n            return isPathSeparator(code) ? path : '.';\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a \"normal root\" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n            // Possible device root\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                // `path` contains just a path separator, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            if (len <= 2) {\n                // `path` contains just a drive root, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    // `path` contains just a drive root, exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        // If the directory is the root, use the entire root as the `dir` including\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nexport const posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : process.cwd();\n            validateString(path, 'path');\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\nexport const globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nlet nodeProcess = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    // Native environment (sandboxed)\n    nodeProcess = globals.vscode.process;\n}\nelse if (typeof process !== 'undefined') {\n    // Native environment (non-sandboxed)\n    nodeProcess = process;\n}\nconst isElectronRenderer = typeof ((_a = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.versions) === null || _a === void 0 ? void 0 : _a.electron) === 'string' && nodeProcess.type === 'renderer';\nexport const isElectronSandboxed = isElectronRenderer && (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.sandboxed);\nexport const browserCodeLoadingCacheStrategy = (() => {\n    // Always enabled when sandbox is enabled\n    if (isElectronSandboxed) {\n        return 'bypassHeatCheck';\n    }\n    // Otherwise, only enabled conditionally\n    const env = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.env['VSCODE_BROWSER_CODE_LOADING'];\n    if (typeof env === 'string') {\n        if (env === 'none' || env === 'code' || env === 'bypassHeatCheck' || env === 'bypassHeatCheckAndEagerCompile') {\n            return env;\n        }\n        return 'bypassHeatCheck';\n    }\n    return undefined;\n})();\nexport const isPreferringBrowserCodeLoad = typeof browserCodeLoadingCacheStrategy === 'string';\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\n// Unknown environment\nelse {\n    console.error('Unable to resolve platform.');\n}\nlet _platform = 0 /* Web */;\nif (_isMacintosh) {\n    _platform = 1 /* Mac */;\n}\nelse if (_isWindows) {\n    _platform = 3 /* Windows */;\n}\nelse if (_isLinux) {\n    _platform = 2 /* Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const userAgent = _userAgent;\nexport const setImmediate = (function defineSetImmediate() {\n    if (globals.setImmediate) {\n        return globals.setImmediate.bind(globals);\n    }\n    if (typeof globals.postMessage === 'function' && !globals.importScripts) {\n        let pending = [];\n        globals.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeSetImmediateId) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeSetImmediateId) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            globals.postMessage({ vscodeSetImmediateId: myId }, '*');\n        };\n    }\n    if (typeof (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.nextTick) === 'function') {\n        return nodeProcess.nextTick.bind(nodeProcess);\n    }\n    const _promise = Promise.resolve();\n    return (callback) => _promise.then(callback);\n})();\nexport const OS = (_isMacintosh || _isIOS ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isWindows, isMacintosh, setImmediate, globals } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    const sandboxProcess = globals.vscode.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); },\n        nextTick(callback) { return setImmediate(callback); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); },\n        nextTick(callback) { return process.nextTick(callback); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        nextTick(callback) { return setImmediate(callback); },\n        // Unsupported\n        get env() { return Object.create(null); },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals } from './platform.js';\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\nexport class StopWatch {\n    constructor(highResolution) {\n        this._highResolution = hasPerformanceNow && highResolution;\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    static create(highResolution = true) {\n        return new StopWatch(highResolution);\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n    _now() {\n        return this._highResolution ? globals.performance.now() : Date.now();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp /* standalone editor compilation */.unicode ? 'u' : '');\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        const diff = codeA - codeB;\n        if (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\n            continue;\n        }\n        else if (diff === -32 && isUpperAsciiLetter(codeA)) { //codeB =[97-122] && codeA =[65-90]\n            continue;\n        }\n        if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n            //\n            return diff;\n        }\n        else {\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && doEqualsIgnoreCase(a, b);\n}\nfunction doEqualsIgnoreCase(a, b, stopAt = a.length) {\n    for (let i = 0; i < stopAt; i++) {\n        const codeA = a.charCodeAt(i);\n        const codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            continue;\n        }\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            const diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n        // Any other charcode\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    let i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    let i, len = Math.min(a.length, b.length);\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport function nextCharLength(str, offset) {\n    const graphemeBreakTree = GraphemeBreakTree.getInstance();\n    const initialOffset = offset;\n    const len = str.length;\n    const initialCodePoint = getNextCodePoint(str, len, offset);\n    offset += (initialCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n    let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n    while (offset < len) {\n        const nextCodePoint = getNextCodePoint(str, len, offset);\n        const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n        if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n            break;\n        }\n        offset += (nextCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        graphemeBreakType = nextGraphemeBreakType;\n    }\n    return (offset - initialOffset);\n}\nexport function prevCharLength(str, offset) {\n    const graphemeBreakTree = GraphemeBreakTree.getInstance();\n    const initialOffset = offset;\n    const initialCodePoint = getPrevCodePoint(str, offset);\n    offset -= (initialCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n    let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n    while (offset > 0) {\n        const prevCodePoint = getPrevCodePoint(str, offset);\n        const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n        if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n            break;\n        }\n        offset -= (prevCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        graphemeBreakType = prevGraphemeBreakType;\n    }\n    return (initialOffset - offset);\n}\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer) {\n    // https://en.wikipedia.org/wiki/UTF-8\n    const len = buffer.byteLength;\n    const result = [];\n    let offset = 0;\n    while (offset < len) {\n        const v0 = buffer[offset];\n        let codePoint;\n        if (v0 >= 0b11110000 && offset + 3 < len) {\n            // 4 bytes\n            codePoint = ((((buffer[offset++] & 0b00000111) << 18) >>> 0)\n                | (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n                | (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n                | (((buffer[offset++] & 0b00111111) << 0) >>> 0));\n        }\n        else if (v0 >= 0b11100000 && offset + 2 < len) {\n            // 3 bytes\n            codePoint = ((((buffer[offset++] & 0b00001111) << 12) >>> 0)\n                | (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n                | (((buffer[offset++] & 0b00111111) << 0) >>> 0));\n        }\n        else if (v0 >= 0b11000000 && offset + 1 < len) {\n            // 2 bytes\n            codePoint = ((((buffer[offset++] & 0b00011111) << 6) >>> 0)\n                | (((buffer[offset++] & 0b00111111) << 0) >>> 0));\n        }\n        else {\n            // 1 byte\n            codePoint = buffer[offset++];\n        }\n        if ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n            // Basic Multilingual Plane\n            result.push(String.fromCharCode(codePoint));\n        }\n        else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n            // Supplementary Planes\n            const uPrime = codePoint - 0x10000;\n            const w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n            const w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n            result.push(String.fromCharCode(w1));\n            result.push(String.fromCharCode(w2));\n        }\n        else {\n            // illegal code point\n            result.push(String.fromCharCode(0xFFFD));\n        }\n    }\n    return result.join('');\n}\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDED6])/;\nexport function containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129750));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* Z */ - 65 /* A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* a */ + n);\n    }\n    return String.fromCharCode(65 /* A */ + n - LETTERS_CNT);\n}\n//#region Unicode Grapheme Break\nexport function getGraphemeBreakType(codePoint) {\n    const graphemeBreakTree = GraphemeBreakTree.getInstance();\n    return graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\nexport function breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* Extend */ && breakTypeB !== 7 /* SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* CR */) {\n        if (breakTypeB === 3 /* LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* Control */ || breakTypeA === 2 /* CR */ || breakTypeA === 3 /* LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* Control */ || breakTypeB === 2 /* CR */ || breakTypeB === 3 /* LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* L */) {\n        if (breakTypeB === 8 /* L */ || breakTypeB === 9 /* V */ || breakTypeB === 11 /* LV */ || breakTypeB === 12 /* LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* LV */ || breakTypeA === 9 /* V */) {\n        if (breakTypeB === 9 /* V */ || breakTypeB === 10 /* T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* LVT */ || breakTypeA === 10 /* T */) {\n        if (breakTypeB === 10 /* T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* Extend */ || breakTypeB === 13 /* ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* ZWJ */ && breakTypeB === 14 /* Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* Regional_Indicator */ && breakTypeB === 6 /* Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* LineFeed */) {\n                return 3 /* LF */;\n            }\n            if (codePoint === 13 /* CarriageReturn */) {\n                return 2 /* CR */;\n            }\n            return 4 /* Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* Other */;\n    }\n}\nGraphemeBreakTree._INSTANCE = null;\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/master/generate-grapheme-break.js\n    return JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n//#endregion\n","/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n    return Array.isArray(array);\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    let proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    let result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined(x) {\n    return x === null ? undefined : x;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isWindows } from './platform.js';\nimport * as paths from './path.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    static from(components) {\n        return new Uri(components.scheme, components.authority, components.path, components.query, components.fragment);\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = data.external;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatibile with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* Colon */]: '%3A',\n    [47 /* Slash */]: '%2F',\n    [63 /* QuestionMark */]: '%3F',\n    [35 /* Hash */]: '%23',\n    [91 /* OpenSquareBracket */]: '%5B',\n    [93 /* CloseSquareBracket */]: '%5D',\n    [64 /* AtSign */]: '%40',\n    [33 /* ExclamationMark */]: '%21',\n    [36 /* DollarSign */]: '%24',\n    [38 /* Ampersand */]: '%26',\n    [39 /* SingleQuote */]: '%27',\n    [40 /* OpenParen */]: '%28',\n    [41 /* CloseParen */]: '%29',\n    [42 /* Asterisk */]: '%2A',\n    [43 /* Plus */]: '%2B',\n    [44 /* Comma */]: '%2C',\n    [59 /* Semicolon */]: '%3B',\n    [61 /* Equals */]: '%3D',\n    [32 /* Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport * as types from '../types.js';\nconst INITIALIZE = '$initialize';\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nclass SimpleWorkerProtocol {\n    constructor(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n    }\n    setWorkerId(workerId) {\n        this._workerId = workerId;\n    }\n    sendMessage(method, args) {\n        let req = String(++this._lastSentReq);\n        return new Promise((resolve, reject) => {\n            this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            this._send({\n                vsWorker: this._workerId,\n                req: req,\n                method: method,\n                args: args\n            });\n        });\n    }\n    handleMessage(message) {\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    }\n    _handleMessage(msg) {\n        if (msg.seq) {\n            let replyMessage = msg;\n            if (!this._pendingReplies[replyMessage.seq]) {\n                console.warn('Got reply to unknown seq');\n                return;\n            }\n            let reply = this._pendingReplies[replyMessage.seq];\n            delete this._pendingReplies[replyMessage.seq];\n            if (replyMessage.err) {\n                let err = replyMessage.err;\n                if (replyMessage.err.$isError) {\n                    err = new Error();\n                    err.name = replyMessage.err.name;\n                    err.message = replyMessage.err.message;\n                    err.stack = replyMessage.err.stack;\n                }\n                reply.reject(err);\n                return;\n            }\n            reply.resolve(replyMessage.res);\n            return;\n        }\n        let requestMessage = msg;\n        let req = requestMessage.req;\n        let result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then((r) => {\n            this._send({\n                vsWorker: this._workerId,\n                seq: req,\n                res: r,\n                err: undefined\n            });\n        }, (e) => {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            this._send({\n                vsWorker: this._workerId,\n                seq: req,\n                res: undefined,\n                err: transformErrorForSerialization(e)\n            });\n        });\n    }\n    _send(msg) {\n        let transfer = [];\n        if (msg.req) {\n            const m = msg;\n            for (let i = 0; i < m.args.length; i++) {\n                if (m.args[i] instanceof ArrayBuffer) {\n                    transfer.push(m.args[i]);\n                }\n            }\n        }\n        else {\n            const m = msg;\n            if (m.res instanceof ArrayBuffer) {\n                transfer.push(m.res);\n            }\n        }\n        this._handler.sendMessage(msg, transfer);\n    }\n}\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient extends Disposable {\n    constructor(workerFactory, moduleId, host) {\n        super();\n        let lazyProxyReject = null;\n        this._worker = this._register(workerFactory.create('vs/base/common/worker/simpleWorker', (msg) => {\n            this._protocol.handleMessage(msg);\n        }, (err) => {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            if (lazyProxyReject) {\n                lazyProxyReject(err);\n            }\n        }));\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                this._worker.postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => {\n                if (typeof host[method] !== 'function') {\n                    return Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\n                }\n                try {\n                    return Promise.resolve(host[method].apply(host, args));\n                }\n                catch (e) {\n                    return Promise.reject(e);\n                }\n            }\n        });\n        this._protocol.setWorkerId(this._worker.getId());\n        // Gather loader configuration\n        let loaderConfiguration = null;\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = self.require.getConfig();\n        }\n        else if (typeof self.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = self.requirejs.s.contexts._.config;\n        }\n        const hostMethods = types.getAllMethodNames(host);\n        // Send initialize message\n        this._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n            this._worker.getId(),\n            JSON.parse(JSON.stringify(loaderConfiguration)),\n            moduleId,\n            hostMethods,\n        ]);\n        // Create proxy to loaded code\n        const proxyMethodRequest = (method, args) => {\n            return this._request(method, args);\n        };\n        this._lazyProxy = new Promise((resolve, reject) => {\n            lazyProxyReject = reject;\n            this._onModuleLoaded.then((availableMethods) => {\n                resolve(types.createProxyObject(availableMethods, proxyMethodRequest));\n            }, (e) => {\n                reject(e);\n                this._onError('Worker failed to load ' + moduleId, e);\n            });\n        });\n    }\n    getProxyObject() {\n        return this._lazyProxy;\n    }\n    _request(method, args) {\n        return new Promise((resolve, reject) => {\n            this._onModuleLoaded.then(() => {\n                this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        });\n    }\n    _onError(message, error) {\n        console.error(message);\n        console.info(error);\n    }\n}\n/**\n * Worker side\n */\nexport class SimpleWorkerServer {\n    constructor(postMessage, requestHandlerFactory) {\n        this._requestHandlerFactory = requestHandlerFactory;\n        this._requestHandler = null;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => this._handleMessage(method, args)\n        });\n    }\n    onmessage(msg) {\n        this._protocol.handleMessage(msg);\n    }\n    _handleMessage(method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2], args[3]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    initialize(workerId, loaderConfig, moduleId, hostMethods) {\n        this._protocol.setWorkerId(workerId);\n        const proxyMethodRequest = (method, args) => {\n            return this._protocol.sendMessage(method, args);\n        };\n        const hostProxy = types.createProxyObject(hostMethods, proxyMethodRequest);\n        if (this._requestHandlerFactory) {\n            // static request handler\n            this._requestHandler = this._requestHandlerFactory(hostProxy);\n            return Promise.resolve(types.getAllMethodNames(this._requestHandler));\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            if (typeof loaderConfig.trustedTypesPolicy !== undefined) {\n                // don't use, it has been destroyed during serialize\n                delete loaderConfig['trustedTypesPolicy'];\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            self.require.config(loaderConfig);\n        }\n        return new Promise((resolve, reject) => {\n            // Use the global require to be sure to get the global config\n            self.require([moduleId], (module) => {\n                this._requestHandler = module.create(hostProxy);\n                if (!this._requestHandler) {\n                    reject(new Error(`No RequestHandler!`));\n                    return;\n                }\n                resolve(types.getAllMethodNames(this._requestHandler));\n            }, reject);\n        });\n    }\n}\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from '../../../base/common/uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier {\n    constructor(_defaultValue) {\n        let defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    static _createAsciiMap(defaultValue) {\n        let asciiMap = new Uint8Array(256);\n        for (let i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    }\n    set(charCode, _value) {\n        let value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    }\n    get(charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    }\n}\nexport class CharacterSet {\n    constructor() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    add(charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    }\n    has(charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nexport class Position {\n    constructor(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new position from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    with(newLineNumber = this.lineNumber, newColumn = this.column) {\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    }\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    delta(deltaLineNumber = 0, deltaColumn = 0) {\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    }\n    /**\n     * Test if this position equals other position\n     */\n    equals(other) {\n        return Position.equals(this, other);\n    }\n    /**\n     * Test if position `a` equals position `b`\n     */\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    isBefore(other) {\n        return Position.isBefore(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    static isBefore(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    isBeforeOrEqual(other) {\n        return Position.isBeforeOrEqual(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    static isBeforeOrEqual(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    }\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    static compare(a, b) {\n        let aLineNumber = a.lineNumber | 0;\n        let bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            let aColumn = a.column | 0;\n            let bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    }\n    /**\n     * Clone this position.\n     */\n    clone() {\n        return new Position(this.lineNumber, this.column);\n    }\n    /**\n     * Convert to a human-readable representation.\n     */\n    toString() {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    }\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    static lift(pos) {\n        return new Position(pos.lineNumber, pos.column);\n    }\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    static isIPosition(obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n    constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    isEmpty() {\n        return Range.isEmpty(this);\n    }\n    /**\n     * Test if `range` is empty.\n     */\n    static isEmpty(range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    }\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    containsPosition(position) {\n        return Range.containsPosition(this, position);\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    static containsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    containsRange(range) {\n        return Range.containsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    static containsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n     */\n    strictContainsRange(range) {\n        return Range.strictContainsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is strinctly in `range` (must start after, and end before). If the ranges are equal, will return false.\n     */\n    static strictContainsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    plusRange(range) {\n        return Range.plusRange(this, range);\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    static plusRange(a, b) {\n        let startLineNumber;\n        let startColumn;\n        let endLineNumber;\n        let endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    intersectRanges(range) {\n        return Range.intersectRanges(this, range);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    static intersectRanges(a, b) {\n        let resultStartLineNumber = a.startLineNumber;\n        let resultStartColumn = a.startColumn;\n        let resultEndLineNumber = a.endLineNumber;\n        let resultEndColumn = a.endColumn;\n        let otherStartLineNumber = b.startLineNumber;\n        let otherStartColumn = b.startColumn;\n        let otherEndLineNumber = b.endLineNumber;\n        let otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    }\n    /**\n     * Test if this range equals other.\n     */\n    equalsRange(other) {\n        return Range.equalsRange(this, other);\n    }\n    /**\n     * Test if range `a` equals `b`.\n     */\n    static equalsRange(a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    getEndPosition() {\n        return Range.getEndPosition(this);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    static getEndPosition(range) {\n        return new Position(range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    getStartPosition() {\n        return Range.getStartPosition(this);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    static getStartPosition(range) {\n        return new Position(range.startLineNumber, range.startColumn);\n    }\n    /**\n     * Transform to a user presentable string representation.\n     */\n    toString() {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    }\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    collapseToStart() {\n        return Range.collapseToStart(this);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    static collapseToStart(range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    }\n    // ---\n    static fromPositions(start, end = start) {\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    static lift(range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    static isIRange(obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    }\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    static areIntersectingOrTouching(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    static areIntersecting(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    static compareRangesUsingStarts(a, b) {\n        if (a && b) {\n            const aStartLineNumber = a.startLineNumber | 0;\n            const bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                const aStartColumn = a.startColumn | 0;\n                const bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    const aEndLineNumber = a.endLineNumber | 0;\n                    const bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        const aEndColumn = a.endColumn | 0;\n                        const bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        const aExists = (a ? 1 : 0);\n        const bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    static compareRangesUsingEnds(a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    }\n    /**\n     * Test if the range spans multiple lines.\n     */\n    static spansMultipleLines(range) {\n        return range.endLineNumber > range.startLineNumber;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n    constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n        this.selectionStartLineNumber = selectionStartLineNumber;\n        this.selectionStartColumn = selectionStartColumn;\n        this.positionLineNumber = positionLineNumber;\n        this.positionColumn = positionColumn;\n    }\n    /**\n     * Transform to a human-readable representation.\n     */\n    toString() {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    /**\n     * Test if equals other selection.\n     */\n    equalsSelection(other) {\n        return (Selection.selectionsEqual(this, other));\n    }\n    /**\n     * Test if the two selections are equal.\n     */\n    static selectionsEqual(a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    }\n    /**\n     * Get directions (LTR or RTL).\n     */\n    getDirection() {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* LTR */;\n        }\n        return 1 /* RTL */;\n    }\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    }\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    getPosition() {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    }\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    }\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    static fromPositions(start, end = start) {\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    static liftSelection(sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    }\n    /**\n     * `a` equals `b`.\n     */\n    static selectionsArrEqual(a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    static isISelection(obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    }\n    /**\n     * Create with a direction.\n     */\n    static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Token {\n    constructor(offset, type, language) {\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    toString() {\n        return '(' + this.offset + ', ' + this.type + ')';\n    }\n}\nexport class TokenizationResult {\n    constructor(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n}\nexport class TokenizationResult2 {\n    constructor(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    const diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nclass LineSequence {\n    constructor(lines) {\n        const startColumns = [];\n        const endColumns = [];\n        for (let i = 0, length = lines.length; i < length; i++) {\n            startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = getLastNonBlankColumn(lines[i], 1);\n        }\n        this.lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    getElements() {\n        const elements = [];\n        for (let i = 0, len = this.lines.length; i < len; i++) {\n            elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n        }\n        return elements;\n    }\n    getStartLineNumber(i) {\n        return i + 1;\n    }\n    getEndLineNumber(i) {\n        return i + 1;\n    }\n    createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        const charCodes = [];\n        const lineNumbers = [];\n        const columns = [];\n        let len = 0;\n        for (let index = startIndex; index <= endIndex; index++) {\n            const lineContent = this.lines[index];\n            const startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            const endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (let col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    }\n}\nclass CharSequence {\n    constructor(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    getElements() {\n        return this._charCodes;\n    }\n    getStartLineNumber(i) {\n        return this._lineNumbers[i];\n    }\n    getStartColumn(i) {\n        return this._columns[i];\n    }\n    getEndLineNumber(i) {\n        return this._lineNumbers[i];\n    }\n    getEndColumn(i) {\n        return this._columns[i] + 1;\n    }\n}\nclass CharChange {\n    constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\n        let originalStartLineNumber;\n        let originalStartColumn;\n        let originalEndLineNumber;\n        let originalEndColumn;\n        let modifiedStartLineNumber;\n        let modifiedStartColumn;\n        let modifiedEndLineNumber;\n        let modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    }\n}\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    const result = [rawChanges[0]];\n    let prevChange = result[0];\n    for (let i = 1, len = rawChanges.length; i < len; i++) {\n        const currChange = rawChanges[i];\n        const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nclass LineChange {\n    constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n            // Compute character changes for diff chunks of at most 20 lines...\n            const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    }\n}\nexport class DiffComputer {\n    constructor(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineSequence(originalLines);\n        this.modified = new LineSequence(modifiedLines);\n        this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n        this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\n    }\n    computeDiff() {\n        if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n            // empty original => fast path\n            if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n                return {\n                    quitEarly: false,\n                    changes: []\n                };\n            }\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: 1,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: this.modified.lines.length,\n                        charChanges: [{\n                                modifiedEndColumn: 0,\n                                modifiedEndLineNumber: 0,\n                                modifiedStartColumn: 0,\n                                modifiedStartLineNumber: 0,\n                                originalEndColumn: 0,\n                                originalEndLineNumber: 0,\n                                originalStartColumn: 0,\n                                originalStartLineNumber: 0\n                            }]\n                    }]\n            };\n        }\n        if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n            // empty modified => fast path\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: this.original.lines.length,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: 1,\n                        charChanges: [{\n                                modifiedEndColumn: 0,\n                                modifiedEndLineNumber: 0,\n                                modifiedStartColumn: 0,\n                                modifiedStartLineNumber: 0,\n                                originalEndColumn: 0,\n                                originalEndLineNumber: 0,\n                                originalStartColumn: 0,\n                                originalStartLineNumber: 0\n                            }]\n                    }]\n            };\n        }\n        const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n        const rawChanges = diffResult.changes;\n        const quitEarly = diffResult.quitEarly;\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            const lineChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return {\n                quitEarly: quitEarly,\n                changes: lineChanges\n            };\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        const result = [];\n        let originalLineIndex = 0;\n        let modifiedLineIndex = 0;\n        for (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            const nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            const originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            const modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                const originalLine = this.originalLines[originalLineIndex];\n                const modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n                        let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n                        let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n                        const originalMaxColumn = originalLine.length + 1;\n                        const modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return {\n            quitEarly: quitEarly,\n            changes: result\n        };\n    }\n    _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        let charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    }\n    _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        const len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        const prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    }\n}\nfunction getFirstNonBlankColumn(txt, defaultValue) {\n    const r = strings.firstNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 1;\n}\nfunction getLastNonBlankColumn(txt, defaultValue) {\n    const r = strings.lastNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 2;\n}\nfunction createContinueProcessingPredicate(maximumRuntime) {\n    if (maximumRuntime === 0) {\n        return () => true;\n    }\n    const startTime = Date.now();\n    return () => {\n        return Date.now() - startTime < maximumRuntime;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nexport class MirrorTextModel {\n    constructor(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n        this._cachedTextValue = null;\n    }\n    dispose() {\n        this._lines.length = 0;\n    }\n    get version() {\n        return this._versionId;\n    }\n    getText() {\n        if (this._cachedTextValue === null) {\n            this._cachedTextValue = this._lines.join(this._eol);\n        }\n        return this._cachedTextValue;\n    }\n    onEvents(e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        const changes = e.changes;\n        for (const change of changes) {\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n        this._cachedTextValue = null;\n    }\n    _ensureLineStarts() {\n        if (!this._lineStarts) {\n            const eolLength = this._eol.length;\n            const linesLength = this._lines.length;\n            const lineStartValues = new Uint32Array(linesLength);\n            for (let i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    }\n    /**\n     * All changes to a line's text go through this method\n     */\n    _setLineText(lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    }\n    _acceptInsertText(position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        let insertLines = splitLines(insertText);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        let newLengths = new Uint32Array(insertLines.length - 1);\n        for (let i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords = '') {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (const sep of USUAL_WORD_SEPARATORS) {\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    let result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nconst _defaultConfig = {\n    maxLen: 1000,\n    windowSize: 15,\n    timeBudget: 150\n};\nexport function getWordAtText(column, wordDefinition, text, textOffset, config = _defaultConfig) {\n    if (text.length > config.maxLen) {\n        // don't throw strings that long at the regexp\n        // but use a sub-string in which a word must occur\n        let start = column - config.maxLen / 2;\n        if (start < 0) {\n            start = 0;\n        }\n        else {\n            textOffset += start;\n        }\n        text = text.substring(start, column + config.maxLen / 2);\n        return getWordAtText(column, wordDefinition, text, textOffset, config);\n    }\n    const t1 = Date.now();\n    const pos = column - 1 - textOffset;\n    let prevRegexIndex = -1;\n    let match = null;\n    for (let i = 1;; i++) {\n        // check time budget\n        if (Date.now() - t1 >= config.timeBudget) {\n            break;\n        }\n        // reset the index at which the regexp should start matching, also know where it\n        // should stop so that subsequent search don't repeat previous searches\n        const regexIndex = pos - config.windowSize * i;\n        wordDefinition.lastIndex = Math.max(0, regexIndex);\n        const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n        if (!thisMatch && match) {\n            // stop: we have something\n            break;\n        }\n        match = thisMatch;\n        // stop: searched at start\n        if (regexIndex <= 0) {\n            break;\n        }\n        prevRegexIndex = regexIndex;\n    }\n    if (match) {\n        let result = {\n            word: match[0],\n            startColumn: textOffset + 1 + match.index,\n            endColumn: textOffset + 1 + match.index + match[0].length\n        };\n        wordDefinition.lastIndex = 0;\n        return result;\n    }\n    return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n    let match;\n    while (match = wordDefinition.exec(text)) {\n        const matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return match;\n        }\n        else if (stopPos > 0 && matchIndex > stopPos) {\n            return null;\n        }\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nexport class Uint8Matrix {\n    constructor(rows, cols, defaultValue) {\n        const data = new Uint8Array(rows * cols);\n        for (let i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    get(row, col) {\n        return this._data[row * this.cols + col];\n    }\n    set(row, col, value) {\n        this._data[row * this.cols + col] = value;\n    }\n}\nexport class StateMachine {\n    constructor(edges) {\n        let maxCharCode = 0;\n        let maxState = 0 /* Invalid */;\n        for (let i = 0, len = edges.length; i < len; i++) {\n            let [from, chCode, to] = edges[i];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        let states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n        for (let i = 0, len = edges.length; i < len; i++) {\n            let [from, chCode, to] = edges[i];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    nextState(currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    }\n}\n// State machine for http:// or https:// or file://\nlet _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nlet _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* None */);\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        const CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nexport class LinkComputer {\n    static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        let lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\n            const chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    }\n    static computeLinks(model, stateMachine = getStateMachine()) {\n        const classifier = getClassifier();\n        let result = [];\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            const line = model.getLineContent(i);\n            const len = line.length;\n            let j = 0;\n            let linkBeginIndex = 0;\n            let linkBeginChCode = 0;\n            let state = 1 /* Start */;\n            let hasOpenParens = false;\n            let hasOpenSquareBracket = false;\n            let inSquareBrackets = false;\n            let hasOpenCurlyBracket = false;\n            while (j < len) {\n                let resetStateMachine = false;\n                const chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    let chClass;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            inSquareBrackets = true;\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            inSquareBrackets = false;\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 42 /* Asterisk */:\n                            // `*` terminates a link if the link began with `*`\n                            chClass = (linkBeginChCode === 42 /* Asterisk */) ? 1 /* ForceTermination */ : 0 /* None */;\n                            break;\n                        case 124 /* Pipe */:\n                            // `|` terminates a link if the link began with `|`\n                            chClass = (linkBeginChCode === 124 /* Pipe */) ? 1 /* ForceTermination */ : 0 /* None */;\n                            break;\n                        case 32 /* Space */:\n                            // ` ` allow space in between [ and ]\n                            chClass = (inSquareBrackets ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    let chClass;\n                    if (chCode === 91 /* OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    }\n}\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class BasicInplaceReplace {\n    constructor() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    navigateValueSet(range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            let result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            let result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    }\n    doNavigateValueSet(text, up) {\n        let numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    }\n    numberReplace(value, up) {\n        let precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        let n1 = Number(value);\n        let n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    }\n    textReplace(value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    }\n    valueSetsReplace(valueSets, value, up) {\n        let result = null;\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    }\n    valueSetReplace(valueSet, value, up) {\n        let idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    }\n}\nBasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { globals } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport * as types from '../../../base/common/types.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\n/**\n * @internal\n */\nclass MirrorModel extends BaseMirrorModel {\n    get uri() {\n        return this._uri;\n    }\n    get eol() {\n        return this._eol;\n    }\n    getValue() {\n        return this.getText();\n    }\n    getLinesContent() {\n        return this._lines.slice(0);\n    }\n    getLineCount() {\n        return this._lines.length;\n    }\n    getLineContent(lineNumber) {\n        return this._lines[lineNumber - 1];\n    }\n    getWordAtPosition(position, wordDefinition) {\n        let wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    }\n    words(wordDefinition) {\n        const lines = this._lines;\n        const wordenize = this._wordenize.bind(this);\n        let lineNumber = 0;\n        let lineText = '';\n        let wordRangesIdx = 0;\n        let wordRanges = [];\n        return {\n            *[Symbol.iterator]() {\n                while (true) {\n                    if (wordRangesIdx < wordRanges.length) {\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                        wordRangesIdx += 1;\n                        yield value;\n                    }\n                    else {\n                        if (lineNumber < lines.length) {\n                            lineText = lines[lineNumber];\n                            wordRanges = wordenize(lineText, wordDefinition);\n                            wordRangesIdx = 0;\n                            lineNumber += 1;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n        };\n    }\n    getLineWords(lineNumber, wordDefinition) {\n        let content = this._lines[lineNumber - 1];\n        let ranges = this._wordenize(content, wordDefinition);\n        let words = [];\n        for (const range of ranges) {\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    }\n    _wordenize(content, wordDefinition) {\n        const result = [];\n        let match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    }\n    getValueInRange(range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        let lineEnding = this._eol;\n        let startLineIndex = range.startLineNumber - 1;\n        let endLineIndex = range.endLineNumber - 1;\n        let resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    }\n    offsetAt(position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n    }\n    positionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        let out = this._lineStarts.getIndexOf(offset);\n        let lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    }\n    _validateRange(range) {\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    }\n    _validatePosition(position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        let { lineNumber, column } = position;\n        let hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            let maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber, column };\n        }\n    }\n}\n/**\n * @internal\n */\nexport class EditorSimpleWorker {\n    constructor(host, foreignModuleFactory) {\n        this._host = host;\n        this._models = Object.create(null);\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    dispose() {\n        this._models = Object.create(null);\n    }\n    _getModel(uri) {\n        return this._models[uri];\n    }\n    _getModels() {\n        let all = [];\n        Object.keys(this._models).forEach((key) => all.push(this._models[key]));\n        return all;\n    }\n    acceptNewModel(data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    }\n    acceptModelChanged(strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        let model = this._models[strURL];\n        model.onEvents(e);\n    }\n    acceptRemovedModel(strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    computeDiff(originalUrl, modifiedUrl, ignoreTrimWhitespace, maxComputationTime) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const original = this._getModel(originalUrl);\n            const modified = this._getModel(modifiedUrl);\n            if (!original || !modified) {\n                return null;\n            }\n            const originalLines = original.getLinesContent();\n            const modifiedLines = modified.getLinesContent();\n            const diffComputer = new DiffComputer(originalLines, modifiedLines, {\n                shouldComputeCharChanges: true,\n                shouldPostProcessCharChanges: true,\n                shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n                shouldMakePrettyDiff: true,\n                maxComputationTime: maxComputationTime\n            });\n            const diffResult = diffComputer.computeDiff();\n            const identical = (diffResult.changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n            return {\n                quitEarly: diffResult.quitEarly,\n                identical: identical,\n                changes: diffResult.changes\n            };\n        });\n    }\n    _modelsAreIdentical(original, modified) {\n        const originalLineCount = original.getLineCount();\n        const modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (let line = 1; line <= originalLineCount; line++) {\n            const originalLine = original.getLineContent(line);\n            const modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    }\n    computeMoreMinimalEdits(modelUrl, edits) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._getModel(modelUrl);\n            if (!model) {\n                return edits;\n            }\n            const result = [];\n            let lastEol = undefined;\n            edits = edits.slice(0).sort((a, b) => {\n                if (a.range && b.range) {\n                    return Range.compareRangesUsingStarts(a.range, b.range);\n                }\n                // eol only changes should go to the end\n                let aRng = a.range ? 0 : 1;\n                let bRng = b.range ? 0 : 1;\n                return aRng - bRng;\n            });\n            for (let { range, text, eol } of edits) {\n                if (typeof eol === 'number') {\n                    lastEol = eol;\n                }\n                if (Range.isEmpty(range) && !text) {\n                    // empty change\n                    continue;\n                }\n                const original = model.getValueInRange(range);\n                text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n                if (original === text) {\n                    // noop\n                    continue;\n                }\n                // make sure diff won't take too long\n                if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                    result.push({ range, text });\n                    continue;\n                }\n                // compute diff between original and edit.text\n                const changes = stringDiff(original, text, false);\n                const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n                for (const change of changes) {\n                    const start = model.positionAt(editOffset + change.originalStart);\n                    const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                    const newEdit = {\n                        text: text.substr(change.modifiedStart, change.modifiedLength),\n                        range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                    };\n                    if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                        result.push(newEdit);\n                    }\n                }\n            }\n            if (typeof lastEol === 'number') {\n                result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n            }\n            return result;\n        });\n    }\n    // ---- END minimal edits ---------------------------------------------------------------\n    computeLinks(modelUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            return computeLinks(model);\n        });\n    }\n    textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const sw = new StopWatch(true);\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            const seen = new Set();\n            outer: for (let url of modelUrls) {\n                const model = this._getModel(url);\n                if (!model) {\n                    continue;\n                }\n                for (let word of model.words(wordDefRegExp)) {\n                    if (word === leadingWord || !isNaN(Number(word))) {\n                        continue;\n                    }\n                    seen.add(word);\n                    if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n                        break outer;\n                    }\n                }\n            }\n            return { words: Array.from(seen), duration: sw.elapsed() };\n        });\n    }\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let model = this._getModel(modelUrl);\n            if (!model) {\n                return Object.create(null);\n            }\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            const result = Object.create(null);\n            for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n                let words = model.getLineWords(line, wordDefRegExp);\n                for (const word of words) {\n                    if (!isNaN(Number(word.word))) {\n                        continue;\n                    }\n                    let array = result[word.word];\n                    if (!array) {\n                        array = [];\n                        result[word.word] = array;\n                    }\n                    array.push({\n                        startLineNumber: line,\n                        startColumn: word.startColumn,\n                        endLineNumber: line,\n                        endColumn: word.endColumn\n                    });\n                }\n            }\n            return result;\n        });\n    }\n    //#endregion\n    navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            let wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            if (range.startColumn === range.endColumn) {\n                range = {\n                    startLineNumber: range.startLineNumber,\n                    startColumn: range.startColumn,\n                    endLineNumber: range.endLineNumber,\n                    endColumn: range.endColumn + 1\n                };\n            }\n            let selectionText = model.getValueInRange(range);\n            let wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n            if (!wordRange) {\n                return null;\n            }\n            let word = model.getValueInRange(wordRange);\n            let result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n            return result;\n        });\n    }\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    loadForeignModule(moduleId, createData, foreignHostMethods) {\n        const proxyMethodRequest = (method, args) => {\n            return this._host.fhr(method, args);\n        };\n        const foreignHost = types.createProxyObject(foreignHostMethods, proxyMethodRequest);\n        let ctx = {\n            host: foreignHost,\n            getMirrorModels: () => {\n                return this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            return Promise.resolve(types.getAllMethodNames(this._foreignModule));\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tresolve(types.getAllMethodNames(this._foreignModule));\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(`Unexpected usage`));\n        // ESM-uncomment-end\n    }\n    // foreign method request\n    fmr(method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\n// ---- END diff --------------------------------------------------------------------------\n// ---- BEGIN minimal edits ---------------------------------------------------------------\nEditorSimpleWorker._diffLimit = 100000;\n// ---- BEGIN suggest --------------------------------------------------------------------------\nEditorSimpleWorker._suggestionsLimit = 10000;\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host) {\n    return new EditorSimpleWorker(host, null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../core/token.js';\nimport * as standaloneEnums from './standaloneEnums.js';\nexport class KeyMod {\n    static chord(firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    }\n}\nKeyMod.CtrlCmd = 2048 /* CtrlCmd */;\nKeyMod.Shift = 1024 /* Shift */;\nKeyMod.Alt = 512 /* Alt */;\nKeyMod.WinCtrl = 256 /* WinCtrl */;\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var AccessibilitySupport;\n(function (AccessibilitySupport) {\n    /**\n     * This should be the browser case where it is not known if a screen reader is attached or no.\n     */\n    AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\n    AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\n    AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\n})(AccessibilitySupport || (AccessibilitySupport = {}));\nexport var CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n    CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * How a suggest provider was triggered.\n */\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nexport var ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport var CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nexport var DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * Configuration options for auto indentation in the editor\n */\nexport var EditorAutoIndentStrategy;\n(function (EditorAutoIndentStrategy) {\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {}));\nexport var EditorOption;\n(function (EditorOption) {\n    EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\n    EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\n    EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\n    EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\n    EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\n    EditorOption[EditorOption[\"autoClosingBrackets\"] = 5] = \"autoClosingBrackets\";\n    EditorOption[EditorOption[\"autoClosingDelete\"] = 6] = \"autoClosingDelete\";\n    EditorOption[EditorOption[\"autoClosingOvertype\"] = 7] = \"autoClosingOvertype\";\n    EditorOption[EditorOption[\"autoClosingQuotes\"] = 8] = \"autoClosingQuotes\";\n    EditorOption[EditorOption[\"autoIndent\"] = 9] = \"autoIndent\";\n    EditorOption[EditorOption[\"automaticLayout\"] = 10] = \"automaticLayout\";\n    EditorOption[EditorOption[\"autoSurround\"] = 11] = \"autoSurround\";\n    EditorOption[EditorOption[\"codeLens\"] = 12] = \"codeLens\";\n    EditorOption[EditorOption[\"codeLensFontFamily\"] = 13] = \"codeLensFontFamily\";\n    EditorOption[EditorOption[\"codeLensFontSize\"] = 14] = \"codeLensFontSize\";\n    EditorOption[EditorOption[\"colorDecorators\"] = 15] = \"colorDecorators\";\n    EditorOption[EditorOption[\"columnSelection\"] = 16] = \"columnSelection\";\n    EditorOption[EditorOption[\"comments\"] = 17] = \"comments\";\n    EditorOption[EditorOption[\"contextmenu\"] = 18] = \"contextmenu\";\n    EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 19] = \"copyWithSyntaxHighlighting\";\n    EditorOption[EditorOption[\"cursorBlinking\"] = 20] = \"cursorBlinking\";\n    EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 21] = \"cursorSmoothCaretAnimation\";\n    EditorOption[EditorOption[\"cursorStyle\"] = 22] = \"cursorStyle\";\n    EditorOption[EditorOption[\"cursorSurroundingLines\"] = 23] = \"cursorSurroundingLines\";\n    EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 24] = \"cursorSurroundingLinesStyle\";\n    EditorOption[EditorOption[\"cursorWidth\"] = 25] = \"cursorWidth\";\n    EditorOption[EditorOption[\"disableLayerHinting\"] = 26] = \"disableLayerHinting\";\n    EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 27] = \"disableMonospaceOptimizations\";\n    EditorOption[EditorOption[\"domReadOnly\"] = 28] = \"domReadOnly\";\n    EditorOption[EditorOption[\"dragAndDrop\"] = 29] = \"dragAndDrop\";\n    EditorOption[EditorOption[\"emptySelectionClipboard\"] = 30] = \"emptySelectionClipboard\";\n    EditorOption[EditorOption[\"extraEditorClassName\"] = 31] = \"extraEditorClassName\";\n    EditorOption[EditorOption[\"fastScrollSensitivity\"] = 32] = \"fastScrollSensitivity\";\n    EditorOption[EditorOption[\"find\"] = 33] = \"find\";\n    EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 34] = \"fixedOverflowWidgets\";\n    EditorOption[EditorOption[\"folding\"] = 35] = \"folding\";\n    EditorOption[EditorOption[\"foldingStrategy\"] = 36] = \"foldingStrategy\";\n    EditorOption[EditorOption[\"foldingHighlight\"] = 37] = \"foldingHighlight\";\n    EditorOption[EditorOption[\"unfoldOnClickAfterEndOfLine\"] = 38] = \"unfoldOnClickAfterEndOfLine\";\n    EditorOption[EditorOption[\"fontFamily\"] = 39] = \"fontFamily\";\n    EditorOption[EditorOption[\"fontInfo\"] = 40] = \"fontInfo\";\n    EditorOption[EditorOption[\"fontLigatures\"] = 41] = \"fontLigatures\";\n    EditorOption[EditorOption[\"fontSize\"] = 42] = \"fontSize\";\n    EditorOption[EditorOption[\"fontWeight\"] = 43] = \"fontWeight\";\n    EditorOption[EditorOption[\"formatOnPaste\"] = 44] = \"formatOnPaste\";\n    EditorOption[EditorOption[\"formatOnType\"] = 45] = \"formatOnType\";\n    EditorOption[EditorOption[\"glyphMargin\"] = 46] = \"glyphMargin\";\n    EditorOption[EditorOption[\"gotoLocation\"] = 47] = \"gotoLocation\";\n    EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 48] = \"hideCursorInOverviewRuler\";\n    EditorOption[EditorOption[\"highlightActiveIndentGuide\"] = 49] = \"highlightActiveIndentGuide\";\n    EditorOption[EditorOption[\"hover\"] = 50] = \"hover\";\n    EditorOption[EditorOption[\"inDiffEditor\"] = 51] = \"inDiffEditor\";\n    EditorOption[EditorOption[\"letterSpacing\"] = 52] = \"letterSpacing\";\n    EditorOption[EditorOption[\"lightbulb\"] = 53] = \"lightbulb\";\n    EditorOption[EditorOption[\"lineDecorationsWidth\"] = 54] = \"lineDecorationsWidth\";\n    EditorOption[EditorOption[\"lineHeight\"] = 55] = \"lineHeight\";\n    EditorOption[EditorOption[\"lineNumbers\"] = 56] = \"lineNumbers\";\n    EditorOption[EditorOption[\"lineNumbersMinChars\"] = 57] = \"lineNumbersMinChars\";\n    EditorOption[EditorOption[\"linkedEditing\"] = 58] = \"linkedEditing\";\n    EditorOption[EditorOption[\"links\"] = 59] = \"links\";\n    EditorOption[EditorOption[\"matchBrackets\"] = 60] = \"matchBrackets\";\n    EditorOption[EditorOption[\"minimap\"] = 61] = \"minimap\";\n    EditorOption[EditorOption[\"mouseStyle\"] = 62] = \"mouseStyle\";\n    EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 63] = \"mouseWheelScrollSensitivity\";\n    EditorOption[EditorOption[\"mouseWheelZoom\"] = 64] = \"mouseWheelZoom\";\n    EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 65] = \"multiCursorMergeOverlapping\";\n    EditorOption[EditorOption[\"multiCursorModifier\"] = 66] = \"multiCursorModifier\";\n    EditorOption[EditorOption[\"multiCursorPaste\"] = 67] = \"multiCursorPaste\";\n    EditorOption[EditorOption[\"occurrencesHighlight\"] = 68] = \"occurrencesHighlight\";\n    EditorOption[EditorOption[\"overviewRulerBorder\"] = 69] = \"overviewRulerBorder\";\n    EditorOption[EditorOption[\"overviewRulerLanes\"] = 70] = \"overviewRulerLanes\";\n    EditorOption[EditorOption[\"padding\"] = 71] = \"padding\";\n    EditorOption[EditorOption[\"parameterHints\"] = 72] = \"parameterHints\";\n    EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 73] = \"peekWidgetDefaultFocus\";\n    EditorOption[EditorOption[\"definitionLinkOpensInPeek\"] = 74] = \"definitionLinkOpensInPeek\";\n    EditorOption[EditorOption[\"quickSuggestions\"] = 75] = \"quickSuggestions\";\n    EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 76] = \"quickSuggestionsDelay\";\n    EditorOption[EditorOption[\"readOnly\"] = 77] = \"readOnly\";\n    EditorOption[EditorOption[\"renameOnType\"] = 78] = \"renameOnType\";\n    EditorOption[EditorOption[\"renderControlCharacters\"] = 79] = \"renderControlCharacters\";\n    EditorOption[EditorOption[\"renderIndentGuides\"] = 80] = \"renderIndentGuides\";\n    EditorOption[EditorOption[\"renderFinalNewline\"] = 81] = \"renderFinalNewline\";\n    EditorOption[EditorOption[\"renderLineHighlight\"] = 82] = \"renderLineHighlight\";\n    EditorOption[EditorOption[\"renderLineHighlightOnlyWhenFocus\"] = 83] = \"renderLineHighlightOnlyWhenFocus\";\n    EditorOption[EditorOption[\"renderValidationDecorations\"] = 84] = \"renderValidationDecorations\";\n    EditorOption[EditorOption[\"renderWhitespace\"] = 85] = \"renderWhitespace\";\n    EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 86] = \"revealHorizontalRightPadding\";\n    EditorOption[EditorOption[\"roundedSelection\"] = 87] = \"roundedSelection\";\n    EditorOption[EditorOption[\"rulers\"] = 88] = \"rulers\";\n    EditorOption[EditorOption[\"scrollbar\"] = 89] = \"scrollbar\";\n    EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 90] = \"scrollBeyondLastColumn\";\n    EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 91] = \"scrollBeyondLastLine\";\n    EditorOption[EditorOption[\"scrollPredominantAxis\"] = 92] = \"scrollPredominantAxis\";\n    EditorOption[EditorOption[\"selectionClipboard\"] = 93] = \"selectionClipboard\";\n    EditorOption[EditorOption[\"selectionHighlight\"] = 94] = \"selectionHighlight\";\n    EditorOption[EditorOption[\"selectOnLineNumbers\"] = 95] = \"selectOnLineNumbers\";\n    EditorOption[EditorOption[\"showFoldingControls\"] = 96] = \"showFoldingControls\";\n    EditorOption[EditorOption[\"showUnused\"] = 97] = \"showUnused\";\n    EditorOption[EditorOption[\"snippetSuggestions\"] = 98] = \"snippetSuggestions\";\n    EditorOption[EditorOption[\"smartSelect\"] = 99] = \"smartSelect\";\n    EditorOption[EditorOption[\"smoothScrolling\"] = 100] = \"smoothScrolling\";\n    EditorOption[EditorOption[\"stickyTabStops\"] = 101] = \"stickyTabStops\";\n    EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 102] = \"stopRenderingLineAfter\";\n    EditorOption[EditorOption[\"suggest\"] = 103] = \"suggest\";\n    EditorOption[EditorOption[\"suggestFontSize\"] = 104] = \"suggestFontSize\";\n    EditorOption[EditorOption[\"suggestLineHeight\"] = 105] = \"suggestLineHeight\";\n    EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 106] = \"suggestOnTriggerCharacters\";\n    EditorOption[EditorOption[\"suggestSelection\"] = 107] = \"suggestSelection\";\n    EditorOption[EditorOption[\"tabCompletion\"] = 108] = \"tabCompletion\";\n    EditorOption[EditorOption[\"tabIndex\"] = 109] = \"tabIndex\";\n    EditorOption[EditorOption[\"unusualLineTerminators\"] = 110] = \"unusualLineTerminators\";\n    EditorOption[EditorOption[\"useShadowDOM\"] = 111] = \"useShadowDOM\";\n    EditorOption[EditorOption[\"useTabStops\"] = 112] = \"useTabStops\";\n    EditorOption[EditorOption[\"wordSeparators\"] = 113] = \"wordSeparators\";\n    EditorOption[EditorOption[\"wordWrap\"] = 114] = \"wordWrap\";\n    EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 115] = \"wordWrapBreakAfterCharacters\";\n    EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 116] = \"wordWrapBreakBeforeCharacters\";\n    EditorOption[EditorOption[\"wordWrapColumn\"] = 117] = \"wordWrapColumn\";\n    EditorOption[EditorOption[\"wordWrapOverride1\"] = 118] = \"wordWrapOverride1\";\n    EditorOption[EditorOption[\"wordWrapOverride2\"] = 119] = \"wordWrapOverride2\";\n    EditorOption[EditorOption[\"wrappingIndent\"] = 120] = \"wrappingIndent\";\n    EditorOption[EditorOption[\"wrappingStrategy\"] = 121] = \"wrappingStrategy\";\n    EditorOption[EditorOption[\"showDeprecated\"] = 122] = \"showDeprecated\";\n    EditorOption[EditorOption[\"inlineHints\"] = 123] = \"inlineHints\";\n    EditorOption[EditorOption[\"editorClassName\"] = 124] = \"editorClassName\";\n    EditorOption[EditorOption[\"pixelRatio\"] = 125] = \"pixelRatio\";\n    EditorOption[EditorOption[\"tabFocusMode\"] = 126] = \"tabFocusMode\";\n    EditorOption[EditorOption[\"layoutInfo\"] = 127] = \"layoutInfo\";\n    EditorOption[EditorOption[\"wrappingInfo\"] = 128] = \"wrappingInfo\";\n})(EditorOption || (EditorOption = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nexport var InlineHintKind;\n(function (InlineHintKind) {\n    InlineHintKind[InlineHintKind[\"Other\"] = 0] = \"Other\";\n    InlineHintKind[InlineHintKind[\"Type\"] = 1] = \"Type\";\n    InlineHintKind[InlineHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlineHintKind || (InlineHintKind = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n    MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\n})(MarkerTag || (MarkerTag = {}));\n/**\n * Position in the minimap to render the decoration.\n */\nexport var MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport var MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport var OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\nexport var RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\nexport var RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\n    RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\n})(RenderMinimap || (RenderMinimap = {}));\nexport var ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\nexport var ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolTag;\n(function (SymbolTag) {\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport var TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nexport var WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint32 } from '../../../base/common/uint.js';\nexport class PrefixSumIndexOfResult {\n    constructor(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n    }\n}\nexport class PrefixSumComputer {\n    constructor(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    insertValues(insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        const insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    changeValue(index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    }\n    removeValues(startIndex, cnt) {\n        startIndex = toUint32(startIndex);\n        cnt = toUint32(cnt);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        let maxCnt = oldValues.length - startIndex;\n        if (cnt >= maxCnt) {\n            cnt = maxCnt;\n        }\n        if (cnt === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - cnt);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    getTotalValue() {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getAccumulatedValue(this.values.length - 1);\n    }\n    getAccumulatedValue(index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getAccumulatedValue(index);\n    }\n    _getAccumulatedValue(index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        let startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (let i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    }\n    getIndexOf(accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalValue();\n        let low = 0;\n        let high = this.values.length - 1;\n        let mid = 0;\n        let midStop = 0;\n        let midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (accumulatedValue < midStart) {\n                high = mid - 1;\n            }\n            else if (accumulatedValue >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\nlet initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const simpleWorker = new SimpleWorkerServer((msg) => {\n        self.postMessage(msg);\n    }, (host) => new EditorSimpleWorker(host, foreignModule));\n    self.onmessage = (e) => {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = (e) => {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n"],"names":["Emitter","Event","shortcutEvent","Object","freeze","callback","context","handle","setTimeout","bind","dispose","clearTimeout","CancellationToken","isCancellationToken","thing","None","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","constructor","_isCancelled","_emitter","cancel","fire","undefined","event","CancellationTokenSource","parent","_token","_parentListener","token","DiffChange","stringHash","StringDiffSequence","source","getElements","characters","Int32Array","length","i","len","charCodeAt","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","changes","Debug","Assert","condition","message","Error","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","Copy2","DiffChangeHelper","m_changes","m_originalStart","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","push","AddOriginalElement","originalIndex","modifiedIndex","Math","min","AddModifiedElement","getChanges","getReverseChanges","reverse","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","originalStringElements","originalElementsOrHash","originalHasStrings","_getElements","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","_isStringArray","arr","sequence","elements","hashes","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalStart","originalEnd","modifiedStart","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","midOriginalArr","midModifiedArr","result","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","max","getOriginalEnd","getModifiedEnd","maxDifferences","numDiagonals","delta","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","abs","matchLengthOfLongest","temp","change","originalStop","modifiedStop","checkOriginal","originalLength","checkModified","modifiedLength","mergedChangeArr","ChangesOverlap","splice","prevChange","bestDelta","bestScore","_boundaryScore","touchingPreviousChange","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","t","_findBetterContiguousSequence","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","j","_contiguousSequenceScore","l","_OriginalIsBoundary","index","test","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","originalScore","modifiedScore","left","right","Array","diagonalBaseIndex","diagonalsBelow","diagonalsAbove","diffEven","lowerBoundEven","upperBoundEven","ErrorHandler","listeners","unexpectedErrorHandler","e","stack","emit","forEach","listener","onUnexpectedError","onUnexpectedExternalError","errorHandler","isPromiseCanceledError","transformErrorForSerialization","error","name","stacktrace","$isError","canceledName","canceled","illegalArgument","illegalState","Disposable","combinedDisposable","DisposableStore","LinkedList","StopWatch","once","thisArgs","disposables","didFire","call","map","snapshot","each","filter","signal","any","events","reduce","merge","initial","output","emitter","onFirstListenerAdd","onLastListenerRemove","debounce","delay","leading","leakWarningThreshold","subscription","numDebouncedCalls","cur","_output","stopwatch","start","Date","getTime","_","latch","firstCall","cache","value","shouldEmit","buffer","nextTick","_buffer","slice","flush","onFirstListenerDidAdd","ChainableEvent","fn","on","chain","fromNodeEventEmitter","eventName","id","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","fromPromise","promise","then","toPromise","Promise","resolve","EventProfiling","_listenerCount","_invocationCount","_elapsedOverall","_name","_idPool","listenerCount","_stopWatch","stop","elapsed","console","info","toFixed","_globalLeakWarningThreshold","LeakageMonitor","customThreshold","random","toString","_warnCountdown","_stacks","clear","check","threshold","Map","split","join","count","get","set","topStack","topCount","warn","options","_a","_disposed","_options","_leakageMon","_perfMon","_profName","_event","_listeners","firstListener","isEmpty","remove","onListenerDidAdd","removeMonitor","size","_noop","hasListeners","add","isArray","_b","_deliveryQueue","shift","_c","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","pause","resume","from","EventBufferer","buffers","wrapEvent","bufferEvents","r","pop","Relay","listening","inputEvent","inputEventListener","input","strings","hash","obj","doHash","hashVal","numberHash","arrayHash","objectHash","booleanHash","val","initialHashVal","b","s","item","keys","sort","key","leftRotate","bits","totalBits","mask","fill","dest","byteLength","leftPad","char","toHexString","bufferOrValue","bitsize","ArrayBuffer","Uint8Array","padStart","StringSHA1","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","DataView","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","update","str","strLen","buff","buffLen","leftoverHighSurrogate","charCode","offset","codePoint","isHighSurrogate","nextCharCode","isLowSurrogate","computeCodePoint","_push","_step","digest","_wrapUp","ml","setUint32","floor","bigBlock32","_bigBlock32","data","getUint32","a","c","d","f","k","Iterable","is","Symbol","iterator","_empty","empty","single","element","iterable","next","done","first","some","predicate","find","concat","iterables","concatNested","reducer","initialValue","to","consume","atMost","Number","POSITIVE_INFINITY","consumed","equals","comparator","at","bt","ai","bi","an","bn","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","create","define","keyCode","toLowerCase","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","KeyCodeUtils","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","KeyChord","firstPart","secondPart","chordPart","createKeybinding","keybinding","OS","ChordKeybinding","createSimpleKeybinding","ctrlCmd","winCtrl","ctrlKey","shiftKey","altKey","metaKey","SimpleKeybinding","other","isModifierKey","toChord","isDuplicateModifierCase","parts","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding","TRACK_DISPOSABLES","disposableTracker","__is_disposable_tracked__","trackDisposable","x","log","markTracked","MultiDisposeError","errors","isDisposable","arg","toDisposable","self","_toDispose","Set","_isDisposed","values","DISABLE_DISPOSED_WARNING","_store","_register","MutableDisposable","_value","ImmortalReference","object","Node","Undefined","prev","_first","_last","_size","unshift","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","node","anchor","process","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","CHAR_QUESTION_MARK","ErrorInvalidArgType","expected","actual","determiner","indexOf","replace","type","msg","code","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","_format","sep","pathObject","dir","root","base","ext","win32","resolvedDevice","resolvedTail","resolvedAbsolute","cwd","env","rootEnd","device","isAbsolute","last","normalize","tail","joined","needsReplace","slashCount","firstLen","relative","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","toNamespacedPath","resolvedPath","dirname","end","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","parse","ret","delimiter","posix","trailingSeparator","hasRoot","platform","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isIOS","_locale","_language","_translationsConfigFile","_userAgent","globals","global","nodeProcess","vscode","isElectronRenderer","versions","electron","isElectronSandboxed","sandboxed","browserCodeLoadingCacheStrategy","isPreferringBrowserCodeLoad","navigator","userAgent","maxTouchPoints","language","rawNlsConfig","nlsConfig","JSON","resolved","availableLanguages","locale","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","setImmediate","defineSetImmediate","postMessage","importScripts","pending","vscodeSetImmediateId","candidate","lastId","myId","_promise","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","view","Uint16Array","safeProcess","sandboxProcess","hasPerformanceNow","performance","now","highResolution","_highResolution","_startTime","_now","_stopTime","isFalsyOrWhitespace","trim","_formatRegexp","args","match","group","idx","parseInt","isNaN","escape","html","escapeRegExpCharacters","haystack","needle","trimmed","ltrim","rtrim","needleLen","substring","haystackLen","convertSimple2RegExpPattern","pattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","exec","lastIndex","regExpFlags","ignoreCase","splitLines","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compare","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareIgnoreCase","compareSubstringIgnoreCase","diff","isUpperAsciiLetter","isLowerAsciiLetter","isAsciiLetter","equalsIgnoreCase","doEqualsIgnoreCase","stopAt","String","fromCharCode","startsWithIgnoreCase","candidateLength","commonPrefixLength","commonSuffixLength","aLastIndex","bLastIndex","highSurrogate","lowSurrogate","getNextCodePoint","getPrevCodePoint","prevCharCode","nextCharLength","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","graphemeBreakType","getGraphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevCharLength","prevCodePoint","prevGraphemeBreakType","decodeUTF8","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","containsFullWidthCharacter","isFullWidthCharacter","isEmojiImprecise","UTF8_BOM_CHARACTER","startsWithUTF8BOM","containsUppercaseCharacter","target","ignoreEscapedChars","singleLetterHash","n","LETTERS_CNT","breakTypeA","breakTypeB","_data","getGraphemeBreakRawData","_INSTANCE","nodeCount","nodeIndex","array","isString","isObject","isNumber","isBoolean","isUndefined","isUndefinedOrNull","assertType","assertIsDefined","isFunction","validateConstraints","constraints","validateConstraint","constraint","getAllPropertyNames","proto","getPrototypeOf","prototype","getOwnPropertyNames","getAllMethodNames","methods","prop","createProxyObject","methodNames","invoke","createProxyMethod","method","arguments","methodName","withNullAsUndefined","toUint8","v","toUint32","paths","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","scheme","authority","query","fragment","_schemeFix","_referenceResolution","_slash","_regexp","URI","schemeOrData","isUri","fsPath","with","uriToFsPath","Uri","percentDecode","file","components","joinPath","uri","newPath","pathFragment","skipEncoding","_asFormatted","toJSON","revive","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","encodeURIComponent","substr","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","decodeURIComponent","_rEncodedAsHex","types","INITIALIZE","webWorkerWarningLogged","logOnceWebWorkerWarning","err","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","req","reject","_send","vsWorker","handleMessage","_handleMessage","seq","replyMessage","reply","requestMessage","detail","transfer","m","SimpleWorkerClient","workerFactory","moduleId","host","lazyProxyReject","_worker","_protocol","apply","getId","loaderConfiguration","require","getConfig","requirejs","contexts","config","hostMethods","_onModuleLoaded","stringify","proxyMethodRequest","_request","_lazyProxy","availableMethods","_onError","getProxyObject","SimpleWorkerServer","requestHandlerFactory","_requestHandlerFactory","_requestHandler","onmessage","initialize","loaderConfig","hostProxy","baseUrl","vs","trustedTypesPolicy","catchError","module","CharacterClassifier","_defaultValue","defaultValue","_asciiMap","_createAsciiMap","_map","asciiMap","CharacterSet","_actual","has","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","aColumn","bColumn","clone","lift","isIPosition","Range","startLineNumber","startColumn","endLineNumber","endColumn","range","containsPosition","position","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","aExists","bExists","compareRangesUsingEnds","spansMultipleLines","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","Token","TokenizationResult","tokens","endState","TokenizationResult2","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","diffAlgo","LineSequence","lines","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","createCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","postProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","matchingLength","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","continueCharDiff","shouldComputeCharChanges","shouldPostProcessCharChanges","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","continueLineDiff","createContinueProcessingPredicate","maxComputationTime","diffResult","lineChanges","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","originalChar","modifiedChar","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","txt","maximumRuntime","startTime","PrefixSumComputer","MirrorTextModel","eol","versionId","_uri","_lines","_eol","_versionId","_lineStarts","_cachedTextValue","version","getText","onEvents","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","Uint32Array","_setLineText","lineIndex","newValue","changeValue","removeValues","insertText","insertLines","newLengths","insertValues","USUAL_WORD_SEPARATORS","createWordRegExp","allowInWords","DEFAULT_WORD_REGEXP","ensureValidWordDefinition","wordDefinition","flags","_defaultConfig","maxLen","windowSize","timeBudget","getWordAtText","textOffset","t1","prevRegexIndex","regexIndex","thisMatch","_findRegexMatchEnclosingPosition","word","stopPos","matchIndex","Uint8Matrix","rows","cols","row","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","nextState","currentState","_stateMachine","getStateMachine","_classifier","getClassifier","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","LinkComputer","_createLink","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","chClass","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","model","stateMachine","lineCount","getLineCount","getLineContent","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","__awaiter","thisArg","_arguments","P","generator","adopt","fulfilled","step","rejected","BaseMirrorModel","createMonacoBaseAPI","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordAtText","words","wordenize","_wordenize","lineText","wordRangesIdx","wordRanges","getLineWords","content","ranges","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","getAccumulatedValue","positionAt","getIndexOf","lineLength","remainder","hasChanged","maxCharacter","EditorSimpleWorker","foreignModuleFactory","_host","_models","_foreignModuleFactory","_foreignModule","_getModel","_getModels","all","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","originalUrl","modifiedUrl","ignoreTrimWhitespace","diffComputer","identical","_modelsAreIdentical","originalLineCount","modifiedLineCount","computeMoreMinimalEdits","modelUrl","edits","lastEol","aRng","bRng","_diffLimit","editOffset","newEdit","textualSuggest","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","seen","outer","_suggestionsLimit","duration","computeWordRanges","selectionText","wordRange","loadForeignModule","createData","foreignHostMethods","fhr","foreignHost","ctx","getMirrorModels","fmr","monaco","standaloneEnums","KeyMod","chord","CtrlCmd","Shift","Alt","WinCtrl","editor","languages","KeyCode","SelectionDirection","MarkerSeverity","MarkerTag","AccessibilitySupport","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","DocumentHighlightKind","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","IndentAction","InlineHintKind","MinimapPosition","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","SignatureHelpTriggerKind","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","PrefixSumIndexOfResult","prefixSum","prefixSumValidIndex","insertIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","cnt","maxCnt","getTotalValue","_getAccumulatedValue","accumulatedValue","low","high","mid","midStop","midStart","initialized","foreignModule","simpleWorker"],"sourceRoot":""}